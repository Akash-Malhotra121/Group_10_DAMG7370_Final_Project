{
	"name": "DIM_VIOLATION",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SNOWSTGTABLE",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeDIMVIOLATION",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeDIMVIOLATION",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeDIMVIOLATION",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "join1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "join2"
				}
			],
			"scriptLines": [
				"parameters{",
				"     JOB_ID as string (\"78\")",
				"}",
				"source(output(",
				"          DBA_NAME as string,",
				"          AKA_NAME as string,",
				"          FACILITY_TYPE as string,",
				"          INSPECTION_ID as string,",
				"          INSPECTION_SK as decimal(38,0),",
				"          INSPECTION_TYPE as string,",
				"          INSPECTION_RESULT as string,",
				"          INSPECTION_DATE as date,",
				"          VIOLATION_CATEGORY_ID as decimal(38,0),",
				"          VIOLATION_CATEGORY as string,",
				"          VIOLATION_DESCRIPTION as string,",
				"          RISK_LEVEL as string,",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          ZIP_CODE as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          ADDRESS as string,",
				"          VIOLATION_COUNT as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source1",
				"source(output(",
				"          MAX_VIOLATION as decimal(10,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT NVL(MAX(VIOLATION_SK),0) AS MAX_VIOLATION FROM FOOD_DIM_SCHEMA.DIM_VIOLATION',",
				"     format: 'query') ~> source2",
				"source(output(",
				"          VIOLATION_SK as decimal(10,0),",
				"          VIOLATION_CAT_ID as decimal(10,0),",
				"          VIOALTION_CAT as string,",
				"          VIOLATION_DESCRIPTION as string,",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source3",
				"join2 select(mapColumn(",
				"          VIOLATION_CATEGORY,",
				"          VIOLATION_CATEGORY_ID,",
				"          VIOLATION_DESCRIPTION = aggregate1@VIOLATION_DESCRIPTION,",
				"          MAX_VIOLATION,",
				"          AGG,",
				"          VIOLATION_SK,",
				"          VIOLATION_CAT_ID,",
				"          VIOALTION_CAT,",
				"          VIOLATION_DESCRIPTION = source3@VIOLATION_DESCRIPTION,",
				"          DI_LOAD_DT,",
				"          DI_JOB_ID",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select1",
				"select1 derive(DI_LOAD_DT = currentDate(),",
				"          DI_JOB_ID = $JOB_ID) ~> derivedColumn1",
				"derivedColumn1 keyGenerate(output(VIOLATIONS_SK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"source1, source2 join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 aggregate(groupBy(VIOLATION_CATEGORY,",
				"          VIOLATION_CATEGORY_ID,",
				"          VIOLATION_DESCRIPTION,",
				"          MAX_VIOLATION),",
				"     AGG = count(INSPECTION_SK)) ~> aggregate1",
				"aggregate1, source3 join(VIOLATION_CATEGORY == VIOALTION_CAT",
				"     && VIOLATION_CATEGORY_ID == VIOLATION_CAT_ID",
				"     && aggregate1@VIOLATION_DESCRIPTION == source3@VIOLATION_DESCRIPTION,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          VIOLATION_SK as decimal(10,0),",
				"          VIOLATION_CAT_ID as decimal(10,0),",
				"          VIOALTION_CAT as string,",
				"          VIOLATION_DESCRIPTION as string,",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     mapColumn(",
				"          VIOLATION_SK = VIOLATIONS_SK,",
				"          VIOLATION_CAT_ID = VIOLATION_CATEGORY_ID,",
				"          VIOALTION_CAT = VIOLATION_CATEGORY,",
				"          VIOLATION_DESCRIPTION,",
				"          DI_LOAD_DT,",
				"          DI_JOB_ID",
				"     )) ~> sink1"
			]
		}
	}
}