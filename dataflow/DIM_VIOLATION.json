{
	"name": "DIM_VIOLATION",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SNOWSTGTABLE",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeDIM_VIOLATION",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     JOB_ID as string (\"78\")",
				"}",
				"source(output(",
				"          DBA_NAME as string,",
				"          AKA_NAME as string,",
				"          FACILITY_TYPE as string,",
				"          INSPECTION_ID as string,",
				"          INSPECTION_SK as decimal(38,0),",
				"          INSPECTION_TYPE as string,",
				"          INSPECTION_RESULT as string,",
				"          INSPECTION_DATE as date,",
				"          VIOLATION_CATEGORY_ID as decimal(38,0),",
				"          VIOLATION_CATEGORY as string,",
				"          VIOLATION_DESCRIPTION as string,",
				"          RISK_LEVEL as string,",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          ZIP_CODE as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          ADDRESS as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> source1",
				"source1 select(mapColumn(",
				"          VIOLATION_CATEGORY_ID,",
				"          VIOLATION_CATEGORY,",
				"          VIOLATION_DESCRIPTION",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select1",
				"select1 derive(DI_LOAD_DT = currentDate(),",
				"          DI_JOB_ID = $JOB_ID) ~> derivedColumn1",
				"derivedColumn1 keyGenerate(output(VIOLATIONS_SK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          VIOLATION_SK as decimal(10,0),",
				"          VIOLATION_CAT_ID as decimal(10,0),",
				"          VIOALTION_CAT as string,",
				"          VIOLATION_DESCRIPTION as string,",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          VIOLATION_SK = VIOLATIONS_SK,",
				"          VIOLATION_CAT_ID = VIOLATION_CATEGORY_ID,",
				"          VIOALTION_CAT = VIOLATION_CATEGORY,",
				"          VIOLATION_DESCRIPTION,",
				"          DI_LOAD_DT,",
				"          DI_JOB_ID",
				"     )) ~> sink1"
			]
		}
	}
}