{
	"name": "FACT_INSPECTION",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeDallas",
						"type": "DatasetReference"
					},
					"name": "sourceDallas"
				},
				{
					"dataset": {
						"referenceName": "DIM_FACILITY_SNOWFLAKE",
						"type": "DatasetReference"
					},
					"name": "sourceFacility"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeDate",
						"type": "DatasetReference"
					},
					"name": "sourceDate"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeLocation",
						"type": "DatasetReference"
					},
					"name": "sourceLocation"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeRisk",
						"type": "DatasetReference"
					},
					"name": "sourceRisk"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeVoilation",
						"type": "DatasetReference"
					},
					"name": "sourceVoilation"
				}
			],
			"sinks": [],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          INSPECTION_ID as string,",
				"          RESTAURANT_NAME as string,",
				"          INSPECTION_TYPE as string,",
				"          INSPECTION_DATE as date,",
				"          INSPECTION_SCORE as decimal(38,0),",
				"          STREET_NAME as string,",
				"          STREET_TYPE as string,",
				"          ZIP_CODE as string,",
				"          INSPECTION_MONTH as string,",
				"          INSPECTION_YEAR as string,",
				"          LAT_LONG_LOC as string,",
				"          NAME as string,",
				"          VALUE as string,",
				"          VIOLATIONS_1 as string,",
				"          VIOLATION_POINT as decimal(38,0),",
				"          VIOLATION_OTHER as string,",
				"          STATE as string,",
				"          FACILITY_TYPE as string,",
				"          CITY as string,",
				"          RIGHT_INSPECTION_ID as string,",
				"          VIOLATION_CATEGORY_ID as string,",
				"          VIOLATION_CATEGORY as string,",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          RISK_LEVEL as string,",
				"          INSPECTION_RESULT as string,",
				"          AKA_NAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceDallas",
				"source(output(",
				"          FACILITY_SK as decimal(10,0),",
				"          FACILITY_TYPE as string,",
				"          DBA_NAME as string,",
				"          AKA_NAME as string,",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceFacility",
				"source(output(",
				"          DATE_SK as decimal(10,0),",
				"          DAY_NAME as string,",
				"          DAY_ABBR as string,",
				"          DAY_NUM as decimal(2,0),",
				"          MONTH_NAME as string,",
				"          MONTH_ABBR as string,",
				"          MONTH_NUM as decimal(2,0),",
				"          QTR_NUM as decimal(2,0),",
				"          DT as date,",
				"          YEAR_NUM as decimal(4,0),",
				"          IS_WEEKEND as decimal(2,0),",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceDate",
				"source(output(",
				"          LOCATION_SK as decimal(10,0),",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          CITY as string,",
				"          STATE as string,",
				"          ADDRESS as string,",
				"          ZIP_CODE as decimal(20,0),",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceLocation",
				"source(output(",
				"          RISK_SK as decimal(10,0),",
				"          RISK_LEVEL as string,",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceRisk",
				"source(output(",
				"          VIOLATION_SK as decimal(10,0),",
				"          VIOLATION_CAT_ID as decimal(10,0),",
				"          VIOALTION_CAT as string,",
				"          VIOLATION_DESCRIPTION as string,",
				"          DI_LOAD_DT as date,",
				"          DI_JOB_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceVoilation"
			]
		}
	}
}